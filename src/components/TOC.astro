---
import ChevronRight from 'components:icons/ChevronRight.astro';

const { headers: origHeaders, lang = 'en' } = Astro.props;
let headers = [];
for (const header of origHeaders) {
  if (header.depth === 2) {
    headers.push({
      ...header,
      subheaders: [],
    });
    continue;
  }
  if (header.depth === 3) {
    const lastHeader = headers[headers.length - 1];
    lastHeader.subheaders.push(header);
  }
}
---

<details>
  <summary>
    <ChevronRight />
    {lang === 'en' ? 'Table of contents' : '√çndice'}
  </summary>
  <ol id="toc">
    {headers.map((header) => {
    return (
    <li>
      <a href={`#${header.slug}`}>{header.text}</a>
      {header.subheaders.length !== 0 && (
      <ul>
        {header.subheaders.map((sh) => (
        <li>
          <a href={`#${sh.slug}`}>{sh.text}</a>
        </li>
        ))}
      </ul>
      )}
    </li>
    );
    })}
  </ol>
</details>

<style lang="scss">
  details {
    display: inline-block;
  }

  #toc {
    margin-top: 1rem;
    margin-bottom: 2rem;
  }

  details > summary::-webkit-details-marker {
    display: none;
  }

  summary {
    position: relative;
    display: flex;
    margin-left: 1rem;
    align-items: center;
    font-family: 'Roboto Slab', serif;
    color: var(--color-subheading);
    font-size: 1.7rem;
    font-weight: 700;
    list-style: none;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    @media only screen and (min-width: 767px) {
      font-size: 2rem;
    }

    :global(svg) {
      position: absolute;
      left: 0;
      transform: translateX(-100%);
      width: 1em;
      transition: transform 0.1s;
    }
  }

  details[open] > summary :global(svg) {
    transform: rotate(90deg) translateY(100%);
  }
</style>
