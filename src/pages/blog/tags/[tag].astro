---
import Base from 'layouts:Base.astro';
import Blogs from 'components:Blog/Blogs.astro';

export async function getStaticPaths() {
  const posts = Astro.fetchContent('../../../posts/en/*.md');

  const possibleTags = new Set();
  for (const post of posts) {
    for (const tag of post.tags) {
      possibleTags.add(tag);
    }
  }

  return Array.from(possibleTags).map(tag => {
    return {
      params: { tag },
      props: {
        posts: posts
          .filter((post) => {
            if (import.meta.env.PROD) {
              return post.published;
            }
            return true;
          })
          .filter(post => post.tags.includes(tag))
          .map(post => {
            let slug = post
              .file
              .pathname
              .replace('/src/posts/en/', '')
              .replace('.md', '');
            if (!post.published) slug = `__draft__${slug}`;
            const url = `/blog/${slug}`;
            return {
              ...post,
              url,
            };
          })
          .sort((a, b) => {
            return (
              new Date(b.created).getTime() -
                new Date(a.created).getTime()
            )
          }),
      },
    }
  });
}

const { tag } = Astro.request.params;
const { posts } = Astro.props;
const section = `blog/tags/${tag}`;
const title = `Tag: ${tag}`;
---

<Base lang="en" section={section} title={title}>
  <Blogs posts={posts} lang="en" tag={tag} title={title} />
</Base>
